<mxfile host="www.draw.io" modified="2019-12-03T11:09:11.382Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36" etag="RTW5M8CM11mGE2Am4AIG" version="12.3.5" type="github" pages="1">
  <diagram id="gzc1fXgGK9Xh2YCLqEI3" name="The Pretext">
    <mxGraphModel dx="1102" dy="533" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1920" pageHeight="1200" math="0" shadow="0">
      <root>
        <mxCell id="0"/>
        <mxCell id="1" parent="0"/>
        <mxCell id="4iyLbNcxx3MA4uBL4IOl-1" value="&lt;div style=&quot;text-align: center&quot;&gt;&lt;font style=&quot;font-size: 17px&quot;&gt;&lt;b&gt;Few basic Terminologies&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;Pre-Texts:&amp;nbsp;&lt;br&gt;Frame Buffer: The Buffer which is displayed on display by the display hardware to manage this buffer usually frame buffer hardware are written.&lt;br&gt;&lt;br&gt;Display Control: The hardware unit which is responsible for controlling the display funcitons and more importantly generating the vertical sync and horizontal sync signals and these days mostly part of GPU. This is also responsible for video memory managment&lt;br&gt;&lt;br&gt;Common Colour Space schemes: RGB-CYMK&lt;br&gt;&lt;br&gt;EGL: An API interface b/w the rendering APIs like OpenGL or OpenVG and underlying native platform windowing systems.It is to be said as binding API for GL&lt;br&gt;&lt;br&gt;DRI: Direct rendering Infrastructure&amp;nbsp;is to access the graphics h/w under&amp;nbsp; X window system(X11 or moslty unix based). Master task is to provide acceleration to mesa implementation of OpenGL.&lt;br&gt;&lt;br&gt;DRM: Direct rendering Manager Linux Kernel&#39;s Graphic level component, Lib DRM is used from user space to talk to DRM and further DRM talks to video card and video card are usually present in GPU these days&lt;br&gt;&lt;br&gt;EGL and DRM connectivity: EGL is higher hierarchy used by application directly, Mesa or Mesa3D is open GL implementation it also has Vulcan and other Graphics API support, different OS implementation of these API are different but they follow a common APU spec. EGL acts as glue with app and these implementation&lt;br&gt;In Linux mesa3D has calls to DRM which further goes to Display through DRM&lt;br&gt;&lt;br&gt;" style="text;html=1;strokeColor=#000000;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;strokeWidth=1;spacingLeft=5;spacingBottom=0;spacingRight=5;" vertex="1" parent="1">
          <mxGeometry x="20" y="20" width="700" height="440" as="geometry"/>
        </mxCell>
        <mxCell id="4iyLbNcxx3MA4uBL4IOl-2" value="Text" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="20" y="480" width="40" height="20" as="geometry"/>
        </mxCell>
        <mxCell id="4iyLbNcxx3MA4uBL4IOl-3" value="&lt;div&gt;&lt;b style=&quot;font-size: 17px&quot;&gt;Relation of these Terms with Android Graphics&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;font-size: 17px&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px&quot;&gt;Android graphics runs on top of Linux&amp;nbsp;graphics, DRM and EGL but it does not include X11 which is remote n/w login services&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px&quot;&gt;Surface flinger provides the composite service, UI app does not draw to the frame buffer directly but does by obtaining a surface of depth form surface flinger.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px&quot;&gt;From Ui&#39;s perspective surface is a rectangular canvas window on a screen with 2D geometrical metric and with a particular color scheme. The depth of the surface or the z-order is specified when the surface is obtained from ?&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px&quot;&gt;Surface flinger selects which surface has to be displayed partially or fully . The lower surfaces are not displayed on the screen. Surface flinger drives the composition of surface area and the rendering to the display screen.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px&quot;&gt;The window in perspective of GUI and OS is visible window systems which is drawn by OS services on the screen, for example a split screen in android or windows can be considered as two windows which are drawn on the display at once. This is done by windowing manager in andorid.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="740" y="21" width="710" height="440" as="geometry"/>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
